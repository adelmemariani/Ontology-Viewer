{"id":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","dependencies":[{"name":"/Users/memarian/Documents/ov/oeo-viewer/client/package.json","includedInParent":true,"mtime":1652294789744},{"name":"/Users/memarian/Documents/ov/oeo-viewer/client/.babelrc","includedInParent":true,"mtime":1652294789738},{"name":"/Users/memarian/Documents/ov/oeo-viewer/client/node_modules/ngraph.forcelayout/package.json","includedInParent":true,"mtime":1652294858703},{"name":"./createPatternBuilder","loc":{"line":5,"column":37},"parent":"/Users/memarian/Documents/ov/oeo-viewer/client/node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","resolved":"/Users/memarian/Documents/ov/oeo-viewer/client/node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js"}],"generated":{"js":"\nmodule.exports = generateBoundsFunction;\nmodule.exports.generateFunctionBody = generateBoundsFunctionBody;\n\nconst createPatternBuilder = require('./createPatternBuilder');\n\nfunction generateBoundsFunction(dimension) {\n  let code = generateBoundsFunctionBody(dimension);\n  return new Function('bodies', 'settings', 'random', code);\n}\n\nfunction generateBoundsFunctionBody(dimension) {\n  let pattern = createPatternBuilder(dimension);\n\n  let code = `\n  var boundingBox = {\n    ${pattern('min_{var}: 0, max_{var}: 0,', {indent: 4})}\n  };\n\n  return {\n    box: boundingBox,\n\n    update: updateBoundingBox,\n\n    reset: resetBoundingBox,\n\n    getBestNewPosition: function (neighbors) {\n      var ${pattern('base_{var} = 0', {join: ', '})};\n\n      if (neighbors.length) {\n        for (var i = 0; i < neighbors.length; ++i) {\n          let neighborPos = neighbors[i].pos;\n          ${pattern('base_{var} += neighborPos.{var};', {indent: 10})}\n        }\n\n        ${pattern('base_{var} /= neighbors.length;', {indent: 8})}\n      } else {\n        ${pattern('base_{var} = (boundingBox.min_{var} + boundingBox.max_{var}) / 2;', {indent: 8})}\n      }\n\n      var springLength = settings.springLength;\n      return {\n        ${pattern('{var}: base_{var} + (random.nextDouble() - 0.5) * springLength,', {indent: 8})}\n      };\n    }\n  };\n\n  function updateBoundingBox() {\n    var i = bodies.length;\n    if (i === 0) return; // No bodies - no borders.\n\n    ${pattern('var max_{var} = -Infinity;', {indent: 4})}\n    ${pattern('var min_{var} = Infinity;', {indent: 4})}\n\n    while(i--) {\n      // this is O(n), it could be done faster with quadtree, if we check the root node bounds\n      var bodyPos = bodies[i].pos;\n      ${pattern('if (bodyPos.{var} < min_{var}) min_{var} = bodyPos.{var};', {indent: 6})}\n      ${pattern('if (bodyPos.{var} > max_{var}) max_{var} = bodyPos.{var};', {indent: 6})}\n    }\n\n    ${pattern('boundingBox.min_{var} = min_{var};', {indent: 4})}\n    ${pattern('boundingBox.max_{var} = max_{var};', {indent: 4})}\n  }\n\n  function resetBoundingBox() {\n    ${pattern('boundingBox.min_{var} = boundingBox.max_{var} = 0;', {indent: 4})}\n  }\n`;\n  return code;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}}],"sources":{"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateBounds.js":"\nmodule.exports = generateBoundsFunction;\nmodule.exports.generateFunctionBody = generateBoundsFunctionBody;\n\nconst createPatternBuilder = require('./createPatternBuilder');\n\nfunction generateBoundsFunction(dimension) {\n  let code = generateBoundsFunctionBody(dimension);\n  return new Function('bodies', 'settings', 'random', code);\n}\n\nfunction generateBoundsFunctionBody(dimension) {\n  let pattern = createPatternBuilder(dimension);\n\n  let code = `\n  var boundingBox = {\n    ${pattern('min_{var}: 0, max_{var}: 0,', {indent: 4})}\n  };\n\n  return {\n    box: boundingBox,\n\n    update: updateBoundingBox,\n\n    reset: resetBoundingBox,\n\n    getBestNewPosition: function (neighbors) {\n      var ${pattern('base_{var} = 0', {join: ', '})};\n\n      if (neighbors.length) {\n        for (var i = 0; i < neighbors.length; ++i) {\n          let neighborPos = neighbors[i].pos;\n          ${pattern('base_{var} += neighborPos.{var};', {indent: 10})}\n        }\n\n        ${pattern('base_{var} /= neighbors.length;', {indent: 8})}\n      } else {\n        ${pattern('base_{var} = (boundingBox.min_{var} + boundingBox.max_{var}) / 2;', {indent: 8})}\n      }\n\n      var springLength = settings.springLength;\n      return {\n        ${pattern('{var}: base_{var} + (random.nextDouble() - 0.5) * springLength,', {indent: 8})}\n      };\n    }\n  };\n\n  function updateBoundingBox() {\n    var i = bodies.length;\n    if (i === 0) return; // No bodies - no borders.\n\n    ${pattern('var max_{var} = -Infinity;', {indent: 4})}\n    ${pattern('var min_{var} = Infinity;', {indent: 4})}\n\n    while(i--) {\n      // this is O(n), it could be done faster with quadtree, if we check the root node bounds\n      var bodyPos = bodies[i].pos;\n      ${pattern('if (bodyPos.{var} < min_{var}) min_{var} = bodyPos.{var};', {indent: 6})}\n      ${pattern('if (bodyPos.{var} > max_{var}) max_{var} = bodyPos.{var};', {indent: 6})}\n    }\n\n    ${pattern('boundingBox.min_{var} = min_{var};', {indent: 4})}\n    ${pattern('boundingBox.max_{var} = max_{var};', {indent: 4})}\n  }\n\n  function resetBoundingBox() {\n    ${pattern('boundingBox.min_{var} = boundingBox.max_{var} = 0;', {indent: 4})}\n  }\n`;\n  return code;\n}\n"},"lineCount":72}},"error":null,"hash":"d4ac4e08f74d74b28bb548f66b746ed8","cacheData":{"env":{}}}