{"id":"iOyc","dependencies":[{"name":"/Users/memarian/Documents/ov/oeo-viewer/client/package.json","includedInParent":true,"mtime":1657025460978},{"name":"/Users/memarian/Documents/ov/oeo-viewer/client/.babelrc","includedInParent":true,"mtime":1652294789738},{"name":"/Users/memarian/Documents/ov/oeo-viewer/client/node_modules/ngraph.forcelayout/package.json","includedInParent":true,"mtime":1652294858703},{"name":"./createPatternBuilder","loc":{"line":1,"column":37},"parent":"/Users/memarian/Documents/ov/oeo-viewer/client/node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","resolved":"/Users/memarian/Documents/ov/oeo-viewer/client/node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js"},{"name":"./getVariableName","loc":{"line":2,"column":32},"parent":"/Users/memarian/Documents/ov/oeo-viewer/client/node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","resolved":"/Users/memarian/Documents/ov/oeo-viewer/client/node_modules/ngraph.forcelayout/lib/codeGenerators/getVariableName.js"}],"generated":{"js":"const n=require(\"./createPatternBuilder\"),e=require(\"./getVariableName\");function t(n){let e=o(n);return new Function(e)()}function o(t){let o=n(t),u=Math.pow(2,t);return`\\n${s()}\\n${d(t)}\\n${r(t)}\\n${a(t)}\\n${i(t)}\\n\\nfunction createQuadTree(options, random) {\\n  options = options || {};\\n  options.gravity = typeof options.gravity === 'number' ? options.gravity : -1;\\n  options.theta = typeof options.theta === 'number' ? options.theta : 0.8;\\n\\n  var gravity = options.gravity;\\n  var updateQueue = [];\\n  var insertStack = new InsertStack();\\n  var theta = options.theta;\\n\\n  var nodesCache = [];\\n  var currentInCache = 0;\\n  var root = newNode();\\n\\n  return {\\n    insertBodies: insertBodies,\\n\\n    /**\\n     * Gets root node if it is present\\n     */\\n    getRoot: function() {\\n      return root;\\n    },\\n\\n    updateBodyForce: update,\\n\\n    options: function(newOptions) {\\n      if (newOptions) {\\n        if (typeof newOptions.gravity === 'number') {\\n          gravity = newOptions.gravity;\\n        }\\n        if (typeof newOptions.theta === 'number') {\\n          theta = newOptions.theta;\\n        }\\n\\n        return this;\\n      }\\n\\n      return {\\n        gravity: gravity,\\n        theta: theta\\n      };\\n    }\\n  };\\n\\n  function newNode() {\\n    // To avoid pressure on GC we reuse nodes.\\n    var node = nodesCache[currentInCache];\\n    if (node) {\\n${function(n){let e=[];for(let t=0;t<u;++t)e.push(`${n}quad${t} = null;`);return e.join(\"\\n\")}(\"      node.\")}\\n      node.body = null;\\n      node.mass = ${o(\"node.mass_{var} = \",{join:\"\"})}0;\\n      ${o(\"node.min_{var} = node.max_{var} = \",{join:\"\"})}0;\\n    } else {\\n      node = new QuadNode();\\n      nodesCache[currentInCache] = node;\\n    }\\n\\n    ++currentInCache;\\n    return node;\\n  }\\n\\n  function update(sourceBody) {\\n    var queue = updateQueue;\\n    var v;\\n    ${o(\"var d{var};\",{indent:4})}\\n    var r; \\n    ${o(\"var f{var} = 0;\",{indent:4})}\\n    var queueLength = 1;\\n    var shiftIdx = 0;\\n    var pushIdx = 1;\\n\\n    queue[0] = root;\\n\\n    while (queueLength) {\\n      var node = queue[shiftIdx];\\n      var body = node.body;\\n\\n      queueLength -= 1;\\n      shiftIdx += 1;\\n      var differentBody = (body !== sourceBody);\\n      if (body && differentBody) {\\n        // If the current node is a leaf node (and it is not source body),\\n        // calculate the force exerted by the current node on body, and add this\\n        // amount to body's net force.\\n        ${o(\"d{var} = body.pos.{var} - sourceBody.pos.{var};\",{indent:8})}\\n        r = Math.sqrt(${o(\"d{var} * d{var}\",{join:\" + \"})});\\n\\n        if (r === 0) {\\n          // Poor man's protection against zero distance.\\n          ${o(\"d{var} = (random.nextDouble() - 0.5) / 50;\",{indent:10})}\\n          r = Math.sqrt(${o(\"d{var} * d{var}\",{join:\" + \"})});\\n        }\\n\\n        // This is standard gravitation force calculation but we divide\\n        // by r^3 to save two operations when normalizing force vector.\\n        v = gravity * body.mass * sourceBody.mass / (r * r * r);\\n        ${o(\"f{var} += v * d{var};\",{indent:8})}\\n      } else if (differentBody) {\\n        // Otherwise, calculate the ratio s / r,  where s is the width of the region\\n        // represented by the internal node, and r is the distance between the body\\n        // and the node's center-of-mass\\n        ${o(\"d{var} = node.mass_{var} / node.mass - sourceBody.pos.{var};\",{indent:8})}\\n        r = Math.sqrt(${o(\"d{var} * d{var}\",{join:\" + \"})});\\n\\n        if (r === 0) {\\n          // Sorry about code duplication. I don't want to create many functions\\n          // right away. Just want to see performance first.\\n          ${o(\"d{var} = (random.nextDouble() - 0.5) / 50;\",{indent:10})}\\n          r = Math.sqrt(${o(\"d{var} * d{var}\",{join:\" + \"})});\\n        }\\n        // If s / r < Î¸, treat this internal node as a single body, and calculate the\\n        // force it exerts on sourceBody, and add this amount to sourceBody's net force.\\n        if ((node.max_${e(0)} - node.min_${e(0)}) / r < theta) {\\n          // in the if statement above we consider node's width only\\n          // because the region was made into square during tree creation.\\n          // Thus there is no difference between using width or height.\\n          v = gravity * node.mass * sourceBody.mass / (r * r * r);\\n          ${o(\"f{var} += v * d{var};\",{indent:10})}\\n        } else {\\n          // Otherwise, run the procedure recursively on each of the current node's children.\\n\\n          // I intentionally unfolded this loop, to save several CPU cycles.\\n${function(){let n=Array(11).join(\" \"),e=[];for(let t=0;t<u;++t)e.push(n+`if (node.quad${t}) {`),e.push(n+`  queue[pushIdx] = node.quad${t};`),e.push(n+\"  queueLength += 1;\"),e.push(n+\"  pushIdx += 1;\"),e.push(n+\"}\");return e.join(\"\\n\")}()}\\n        }\\n      }\\n    }\\n\\n    ${o(\"sourceBody.force.{var} += f{var};\",{indent:4})}\\n  }\\n\\n  function insertBodies(bodies) {\\n    ${o(\"var {var}min = Number.MAX_VALUE;\",{indent:4})}\\n    ${o(\"var {var}max = Number.MIN_VALUE;\",{indent:4})}\\n    var i = bodies.length;\\n\\n    // To reduce quad tree depth we are looking for exact bounding box of all particles.\\n    while (i--) {\\n      var pos = bodies[i].pos;\\n      ${o(\"if (pos.{var} < {var}min) {var}min = pos.{var};\",{indent:6})}\\n      ${o(\"if (pos.{var} > {var}max) {var}max = pos.{var};\",{indent:6})}\\n    }\\n\\n    // Makes the bounds square.\\n    var maxSideLength = -Infinity;\\n    ${o(\"if ({var}max - {var}min > maxSideLength) maxSideLength = {var}max - {var}min ;\",{indent:4})}\\n\\n    currentInCache = 0;\\n    root = newNode();\\n    ${o(\"root.min_{var} = {var}min;\",{indent:4})}\\n    ${o(\"root.max_{var} = {var}min + maxSideLength;\",{indent:4})}\\n\\n    i = bodies.length - 1;\\n    if (i >= 0) {\\n      root.body = bodies[i];\\n    }\\n    while (i--) {\\n      insert(bodies[i], root);\\n    }\\n  }\\n\\n  function insert(newBody) {\\n    insertStack.reset();\\n    insertStack.push(root, newBody);\\n\\n    while (!insertStack.isEmpty()) {\\n      var stackItem = insertStack.pop();\\n      var node = stackItem.node;\\n      var body = stackItem.body;\\n\\n      if (!node.body) {\\n        // This is internal node. Update the total mass of the node and center-of-mass.\\n        ${o(\"var {var} = body.pos.{var};\",{indent:8})}\\n        node.mass += body.mass;\\n        ${o(\"node.mass_{var} += body.mass * {var};\",{indent:8})}\\n\\n        // Recursively insert the body in the appropriate quadrant.\\n        // But first find the appropriate quadrant.\\n        var quadIdx = 0; // Assume we are in the 0's quad.\\n        ${o(\"var min_{var} = node.min_{var};\",{indent:8})}\\n        ${o(\"var max_{var} = (min_{var} + node.max_{var}) / 2;\",{indent:8})}\\n\\n${function(n){let o=[],r=Array(n+1).join(\" \");for(let i=0;i<t;++i)o.push(r+`if (${e(i)} > max_${e(i)}) {`),o.push(r+`  quadIdx = quadIdx + ${Math.pow(2,i)};`),o.push(r+`  min_${e(i)} = max_${e(i)};`),o.push(r+`  max_${e(i)} = node.max_${e(i)};`),o.push(r+\"}\");return o.join(\"\\n\")}(8)}\\n\\n        var child = getChild(node, quadIdx);\\n\\n        if (!child) {\\n          // The node is internal but this quadrant is not taken. Add\\n          // subnode to it.\\n          child = newNode();\\n          ${o(\"child.min_{var} = min_{var};\",{indent:10})}\\n          ${o(\"child.max_{var} = max_{var};\",{indent:10})}\\n          child.body = body;\\n\\n          setChild(node, quadIdx, child);\\n        } else {\\n          // continue searching in this quadrant.\\n          insertStack.push(child, body);\\n        }\\n      } else {\\n        // We are trying to add to the leaf node.\\n        // We have to convert current leaf into internal node\\n        // and continue adding two nodes.\\n        var oldBody = node.body;\\n        node.body = null; // internal nodes do not cary bodies\\n\\n        if (isSamePosition(oldBody.pos, body.pos)) {\\n          // Prevent infinite subdivision by bumping one node\\n          // anywhere in this quadrant\\n          var retriesCount = 3;\\n          do {\\n            var offset = random.nextDouble();\\n            ${o(\"var d{var} = (node.max_{var} - node.min_{var}) * offset;\",{indent:12})}\\n\\n            ${o(\"oldBody.pos.{var} = node.min_{var} + d{var};\",{indent:12})}\\n            retriesCount -= 1;\\n            // Make sure we don't bump it out of the box. If we do, next iteration should fix it\\n          } while (retriesCount > 0 && isSamePosition(oldBody.pos, body.pos));\\n\\n          if (retriesCount === 0 && isSamePosition(oldBody.pos, body.pos)) {\\n            // This is very bad, we ran out of precision.\\n            // if we do not return from the method we'll get into\\n            // infinite loop here. So we sacrifice correctness of layout, and keep the app running\\n            // Next layout iteration should get larger bounding box in the first step and fix this\\n            return;\\n          }\\n        }\\n        // Next iteration should subdivide node further.\\n        insertStack.push(node, oldBody);\\n        insertStack.push(node, body);\\n      }\\n    }\\n  }\\n}\\nreturn createQuadTree;\\n\\n`}function r(e){let t=n(e);return`\\n  function isSamePosition(point1, point2) {\\n    ${t(\"var d{var} = Math.abs(point1.{var} - point2.{var});\",{indent:2})}\\n  \\n    return ${t(\"d{var} < 1e-8\",{join:\" && \"})};\\n  }  \\n`}function i(n){var e=Math.pow(2,n);return`\\nfunction setChild(node, idx, child) {\\n  ${function(){let n=[];for(let t=0;t<e;++t){let e=0===t?\"  \":\"  else \";n.push(`${e}if (idx === ${t}) node.quad${t} = child;`)}return n.join(\"\\n\")}()}\\n}`}function a(n){return`function getChild(node, idx) {\\n${function(){let e=[],t=Math.pow(2,n);for(let n=0;n<t;++n)e.push(`  if (idx === ${n}) return node.quad${n};`);return e.join(\"\\n\")}()}\\n  return null;\\n}`}function d(e){let t=n(e),o=Math.pow(2,e);return`\\nfunction QuadNode() {\\n  // body stored inside this node. In quad tree only leaf nodes (by construction)\\n  // contain bodies:\\n  this.body = null;\\n\\n  // Child nodes are stored in quads. Each quad is presented by number:\\n  // 0 | 1\\n  // -----\\n  // 2 | 3\\n${function(n){let e=[];for(let t=0;t<o;++t)e.push(`${n}quad${t} = null;`);return e.join(\"\\n\")}(\"  this.\")}\\n\\n  // Total mass of current node\\n  this.mass = 0;\\n\\n  // Center of mass coordinates\\n  ${t(\"this.mass_{var} = 0;\",{indent:2})}\\n\\n  // bounding box coordinates\\n  ${t(\"this.min_{var} = 0;\",{indent:2})}\\n  ${t(\"this.max_{var} = 0;\",{indent:2})}\\n}\\n`}function s(){return\"\\n/**\\n * Our implementation of QuadTree is non-recursive to avoid GC hit\\n * This data structure represent stack of elements\\n * which we are trying to insert into quad tree.\\n */\\nfunction InsertStack () {\\n    this.stack = [];\\n    this.popIdx = 0;\\n}\\n\\nInsertStack.prototype = {\\n    isEmpty: function() {\\n        return this.popIdx === 0;\\n    },\\n    push: function (node, body) {\\n        var item = this.stack[this.popIdx];\\n        if (!item) {\\n            // we are trying to avoid memory pressure: create new element\\n            // only when absolutely necessary\\n            this.stack[this.popIdx] = new InsertStackElement(node, body);\\n        } else {\\n            item.node = node;\\n            item.body = body;\\n        }\\n        ++this.popIdx;\\n    },\\n    pop: function () {\\n        if (this.popIdx > 0) {\\n            return this.stack[--this.popIdx];\\n        }\\n    },\\n    reset: function () {\\n        this.popIdx = 0;\\n    }\\n};\\n\\nfunction InsertStackElement(node, body) {\\n    this.node = node; // QuadTree node\\n    this.body = body; // physical body which needs to be inserted to node\\n}\\n\"}module.exports=t,module.exports.generateQuadTreeFunctionBody=o,module.exports.getInsertStackCode=s,module.exports.getQuadNodeCode=d,module.exports.isSamePosition=r,module.exports.getChildBodyCode=a,module.exports.setChildBodyCode=i;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":1,"column":0},"generated":{"line":1,"column":8}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":1,"column":0},"generated":{"line":1,"column":16}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":2,"column":0},"generated":{"line":1,"column":42}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":2,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":2,"column":0},"generated":{"line":1,"column":52}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":19,"column":0},"generated":{"line":1,"column":73}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":19,"column":0},"generated":{"line":1,"column":82}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":19,"column":0},"generated":{"line":1,"column":84}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":20,"column":0},"generated":{"line":1,"column":87}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":20,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":20,"column":0},"generated":{"line":1,"column":93}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":20,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":21,"column":0},"generated":{"line":1,"column":98}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":21,"column":0},"generated":{"line":1,"column":105}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":21,"column":0},"generated":{"line":1,"column":109}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":21,"column":0},"generated":{"line":1,"column":118}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":21,"column":0},"generated":{"line":1,"column":120}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":24,"column":0},"generated":{"line":1,"column":123}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":24,"column":0},"generated":{"line":1,"column":132}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":24,"column":0},"generated":{"line":1,"column":134}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":25,"column":0},"generated":{"line":1,"column":137}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":25,"column":0},"generated":{"line":1,"column":141}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":25,"column":0},"generated":{"line":1,"column":143}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":25,"column":0},"generated":{"line":1,"column":145}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":26,"column":0},"generated":{"line":1,"column":148}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":26,"column":0},"generated":{"line":1,"column":150}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":26,"column":0},"generated":{"line":1,"column":155}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":26,"column":0},"generated":{"line":1,"column":159}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":26,"column":0},"generated":{"line":1,"column":161}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":272,"column":0},"generated":{"line":1,"column":164}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":29,"column":0},"generated":{"line":1,"column":175}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":30,"column":0},"generated":{"line":1,"column":183}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":30,"column":0},"generated":{"line":1,"column":185}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":31,"column":0},"generated":{"line":1,"column":192}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":31,"column":0},"generated":{"line":1,"column":194}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":32,"column":0},"generated":{"line":1,"column":201}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":32,"column":0},"generated":{"line":1,"column":203}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":33,"column":0},"generated":{"line":1,"column":210}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":33,"column":0},"generated":{"line":1,"column":212}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":311,"column":0},"generated":{"line":1,"column":1383}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":311,"column":0},"generated":{"line":1,"column":1392}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":316,"column":0},"generated":{"line":1,"column":1395}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":316,"column":0},"generated":{"line":1,"column":1399}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":316,"column":0},"generated":{"line":1,"column":1401}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":317,"column":0},"generated":{"line":1,"column":1404}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":317,"column":0},"generated":{"line":1,"column":1408}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":317,"column":0},"generated":{"line":1,"column":1412}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":317,"column":0},"generated":{"line":1,"column":1414}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":317,"column":0},"generated":{"line":1,"column":1416}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":317,"column":0},"generated":{"line":1,"column":1418}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":317,"column":0},"generated":{"line":1,"column":1422}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":318,"column":0},"generated":{"line":1,"column":1424}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":318,"column":0},"generated":{"line":1,"column":1426}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":318,"column":0},"generated":{"line":1,"column":1434}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":318,"column":0},"generated":{"line":1,"column":1442}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":320,"column":0},"generated":{"line":1,"column":1455}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":320,"column":0},"generated":{"line":1,"column":1462}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":320,"column":0},"generated":{"line":1,"column":1464}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":320,"column":0},"generated":{"line":1,"column":1469}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":84,"column":0},"generated":{"line":1,"column":1475}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":84,"column":0},"generated":{"line":1,"column":1476}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":86,"column":0},"generated":{"line":1,"column":1538}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":86,"column":0},"generated":{"line":1,"column":1540}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":86,"column":0},"generated":{"line":1,"column":1561}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":86,"column":0},"generated":{"line":1,"column":1562}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":86,"column":0},"generated":{"line":1,"column":1567}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":87,"column":0},"generated":{"line":1,"column":1584}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":87,"column":0},"generated":{"line":1,"column":1586}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":87,"column":0},"generated":{"line":1,"column":1623}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":87,"column":0},"generated":{"line":1,"column":1624}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":87,"column":0},"generated":{"line":1,"column":1629}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":100,"column":0},"generated":{"line":1,"column":1862}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":100,"column":0},"generated":{"line":1,"column":1864}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":100,"column":0},"generated":{"line":1,"column":1878}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":100,"column":0},"generated":{"line":1,"column":1879}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":100,"column":0},"generated":{"line":1,"column":1886}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":102,"column":0},"generated":{"line":1,"column":1911}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":102,"column":0},"generated":{"line":1,"column":1913}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":102,"column":0},"generated":{"line":1,"column":1931}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":102,"column":0},"generated":{"line":1,"column":1932}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":102,"column":0},"generated":{"line":1,"column":1939}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":120,"column":0},"generated":{"line":1,"column":2476}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":120,"column":0},"generated":{"line":1,"column":2478}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":120,"column":0},"generated":{"line":1,"column":2528}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":120,"column":0},"generated":{"line":1,"column":2529}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":120,"column":0},"generated":{"line":1,"column":2536}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":121,"column":0},"generated":{"line":1,"column":2566}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":121,"column":0},"generated":{"line":1,"column":2568}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":121,"column":0},"generated":{"line":1,"column":2586}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":121,"column":0},"generated":{"line":1,"column":2587}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":121,"column":0},"generated":{"line":1,"column":2592}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":125,"column":0},"generated":{"line":1,"column":2701}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":125,"column":0},"generated":{"line":1,"column":2703}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":125,"column":0},"generated":{"line":1,"column":2748}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":125,"column":0},"generated":{"line":1,"column":2749}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":125,"column":0},"generated":{"line":1,"column":2756}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":126,"column":0},"generated":{"line":1,"column":2789}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":126,"column":0},"generated":{"line":1,"column":2791}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":126,"column":0},"generated":{"line":1,"column":2809}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":126,"column":0},"generated":{"line":1,"column":2810}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":126,"column":0},"generated":{"line":1,"column":2815}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":132,"column":0},"generated":{"line":1,"column":3062}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":132,"column":0},"generated":{"line":1,"column":3064}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":132,"column":0},"generated":{"line":1,"column":3088}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":132,"column":0},"generated":{"line":1,"column":3089}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":132,"column":0},"generated":{"line":1,"column":3096}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":137,"column":0},"generated":{"line":1,"column":3360}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":137,"column":0},"generated":{"line":1,"column":3362}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":137,"column":0},"generated":{"line":1,"column":3425}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":137,"column":0},"generated":{"line":1,"column":3426}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":137,"column":0},"generated":{"line":1,"column":3433}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":138,"column":0},"generated":{"line":1,"column":3463}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":138,"column":0},"generated":{"line":1,"column":3465}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":138,"column":0},"generated":{"line":1,"column":3483}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":138,"column":0},"generated":{"line":1,"column":3484}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":138,"column":0},"generated":{"line":1,"column":3489}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":143,"column":0},"generated":{"line":1,"column":3683}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":143,"column":0},"generated":{"line":1,"column":3685}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":143,"column":0},"generated":{"line":1,"column":3730}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":143,"column":0},"generated":{"line":1,"column":3731}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":143,"column":0},"generated":{"line":1,"column":3738}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":144,"column":0},"generated":{"line":1,"column":3771}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":144,"column":0},"generated":{"line":1,"column":3773}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":144,"column":0},"generated":{"line":1,"column":3791}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":144,"column":0},"generated":{"line":1,"column":3792}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":144,"column":0},"generated":{"line":1,"column":3797}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":148,"column":0},"generated":{"line":1,"column":4021}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":148,"column":0},"generated":{"line":1,"column":4023}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":148,"column":0},"generated":{"line":1,"column":4040}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":148,"column":0},"generated":{"line":1,"column":4042}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":153,"column":0},"generated":{"line":1,"column":4362}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":153,"column":0},"generated":{"line":1,"column":4364}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":153,"column":0},"generated":{"line":1,"column":4388}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":153,"column":0},"generated":{"line":1,"column":4389}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":153,"column":0},"generated":{"line":1,"column":4396}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":293,"column":0},"generated":{"line":1,"column":4598}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":294,"column":0},"generated":{"line":1,"column":4609}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":294,"column":0},"generated":{"line":1,"column":4613}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":294,"column":0},"generated":{"line":1,"column":4615}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":294,"column":0},"generated":{"line":1,"column":4621}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":294,"column":0},"generated":{"line":1,"column":4625}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":294,"column":0},"generated":{"line":1,"column":4630}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":295,"column":0},"generated":{"line":1,"column":4635}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":295,"column":0},"generated":{"line":1,"column":4637}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":296,"column":0},"generated":{"line":1,"column":4640}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":296,"column":0},"generated":{"line":1,"column":4644}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":296,"column":0},"generated":{"line":1,"column":4648}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":296,"column":0},"generated":{"line":1,"column":4650}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":296,"column":0},"generated":{"line":1,"column":4652}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":296,"column":0},"generated":{"line":1,"column":4654}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":296,"column":0},"generated":{"line":1,"column":4658}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":297,"column":0},"generated":{"line":1,"column":4660}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":297,"column":0},"generated":{"line":1,"column":4662}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":297,"column":0},"generated":{"line":1,"column":4667}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":297,"column":0},"generated":{"line":1,"column":4685}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":298,"column":0},"generated":{"line":1,"column":4693}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":298,"column":0},"generated":{"line":1,"column":4695}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":298,"column":0},"generated":{"line":1,"column":4700}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":298,"column":0},"generated":{"line":1,"column":4733}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":299,"column":0},"generated":{"line":1,"column":4739}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":299,"column":0},"generated":{"line":1,"column":4741}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":299,"column":0},"generated":{"line":1,"column":4746}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":299,"column":0},"generated":{"line":1,"column":4748}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":300,"column":0},"generated":{"line":1,"column":4771}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":300,"column":0},"generated":{"line":1,"column":4773}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":300,"column":0},"generated":{"line":1,"column":4778}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":300,"column":0},"generated":{"line":1,"column":4780}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":301,"column":0},"generated":{"line":1,"column":4799}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":301,"column":0},"generated":{"line":1,"column":4801}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":301,"column":0},"generated":{"line":1,"column":4806}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":301,"column":0},"generated":{"line":1,"column":4808}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":303,"column":0},"generated":{"line":1,"column":4813}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":303,"column":0},"generated":{"line":1,"column":4820}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":303,"column":0},"generated":{"line":1,"column":4822}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":303,"column":0},"generated":{"line":1,"column":4827}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":158,"column":0},"generated":{"line":1,"column":4833}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":163,"column":0},"generated":{"line":1,"column":4873}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":163,"column":0},"generated":{"line":1,"column":4875}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":163,"column":0},"generated":{"line":1,"column":4911}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":163,"column":0},"generated":{"line":1,"column":4912}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":163,"column":0},"generated":{"line":1,"column":4919}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":167,"column":0},"generated":{"line":1,"column":4973}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":167,"column":0},"generated":{"line":1,"column":4975}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":167,"column":0},"generated":{"line":1,"column":5010}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":167,"column":0},"generated":{"line":1,"column":5011}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":167,"column":0},"generated":{"line":1,"column":5018}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":168,"column":0},"generated":{"line":1,"column":5030}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":168,"column":0},"generated":{"line":1,"column":5032}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":168,"column":0},"generated":{"line":1,"column":5067}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":168,"column":0},"generated":{"line":1,"column":5068}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":168,"column":0},"generated":{"line":1,"column":5075}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":174,"column":0},"generated":{"line":1,"column":5260}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":174,"column":0},"generated":{"line":1,"column":5262}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":174,"column":0},"generated":{"line":1,"column":5312}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":174,"column":0},"generated":{"line":1,"column":5313}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":174,"column":0},"generated":{"line":1,"column":5320}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":175,"column":0},"generated":{"line":1,"column":5334}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":175,"column":0},"generated":{"line":1,"column":5336}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":175,"column":0},"generated":{"line":1,"column":5386}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":175,"column":0},"generated":{"line":1,"column":5387}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":175,"column":0},"generated":{"line":1,"column":5394}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":180,"column":0},"generated":{"line":1,"column":5484}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":180,"column":0},"generated":{"line":1,"column":5486}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":180,"column":0},"generated":{"line":1,"column":5567}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":180,"column":0},"generated":{"line":1,"column":5568}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":180,"column":0},"generated":{"line":1,"column":5575}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":184,"column":0},"generated":{"line":1,"column":5637}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":184,"column":0},"generated":{"line":1,"column":5639}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":184,"column":0},"generated":{"line":1,"column":5668}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":184,"column":0},"generated":{"line":1,"column":5669}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":184,"column":0},"generated":{"line":1,"column":5676}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":185,"column":0},"generated":{"line":1,"column":5688}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":185,"column":0},"generated":{"line":1,"column":5690}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":185,"column":0},"generated":{"line":1,"column":5735}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":185,"column":0},"generated":{"line":1,"column":5736}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":185,"column":0},"generated":{"line":1,"column":5743}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":207,"column":0},"generated":{"line":1,"column":6270}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":207,"column":0},"generated":{"line":1,"column":6272}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":207,"column":0},"generated":{"line":1,"column":6302}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":207,"column":0},"generated":{"line":1,"column":6303}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":207,"column":0},"generated":{"line":1,"column":6310}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":209,"column":0},"generated":{"line":1,"column":6359}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":209,"column":0},"generated":{"line":1,"column":6361}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":209,"column":0},"generated":{"line":1,"column":6401}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":209,"column":0},"generated":{"line":1,"column":6402}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":209,"column":0},"generated":{"line":1,"column":6409}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":214,"column":0},"generated":{"line":1,"column":6609}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":214,"column":0},"generated":{"line":1,"column":6611}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":214,"column":0},"generated":{"line":1,"column":6645}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":214,"column":0},"generated":{"line":1,"column":6646}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":214,"column":0},"generated":{"line":1,"column":6653}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":215,"column":0},"generated":{"line":1,"column":6669}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":215,"column":0},"generated":{"line":1,"column":6671}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":215,"column":0},"generated":{"line":1,"column":6723}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":215,"column":0},"generated":{"line":1,"column":6724}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":215,"column":0},"generated":{"line":1,"column":6731}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":275,"column":0},"generated":{"line":1,"column":6741}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":275,"column":0},"generated":{"line":1,"column":6750}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":276,"column":0},"generated":{"line":1,"column":6753}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":276,"column":0},"generated":{"line":1,"column":6757}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":276,"column":0},"generated":{"line":1,"column":6759}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":277,"column":0},"generated":{"line":1,"column":6762}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":277,"column":0},"generated":{"line":1,"column":6764}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":277,"column":0},"generated":{"line":1,"column":6770}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":277,"column":0},"generated":{"line":1,"column":6772}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":277,"column":0},"generated":{"line":1,"column":6775}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":277,"column":0},"generated":{"line":1,"column":6780}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":278,"column":0},"generated":{"line":1,"column":6785}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":278,"column":0},"generated":{"line":1,"column":6789}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":278,"column":0},"generated":{"line":1,"column":6793}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":278,"column":0},"generated":{"line":1,"column":6795}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":278,"column":0},"generated":{"line":1,"column":6797}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":278,"column":0},"generated":{"line":1,"column":6799}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":278,"column":0},"generated":{"line":1,"column":6803}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":279,"column":0},"generated":{"line":1,"column":6805}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":279,"column":0},"generated":{"line":1,"column":6807}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":279,"column":0},"generated":{"line":1,"column":6812}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":279,"column":0},"generated":{"line":1,"column":6821}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":279,"column":0},"generated":{"line":1,"column":6823}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":279,"column":0},"generated":{"line":1,"column":6835}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":279,"column":0},"generated":{"line":1,"column":6837}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":280,"column":0},"generated":{"line":1,"column":6846}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":280,"column":0},"generated":{"line":1,"column":6848}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":280,"column":0},"generated":{"line":1,"column":6853}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":280,"column":0},"generated":{"line":1,"column":6880}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":280,"column":0},"generated":{"line":1,"column":6885}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":280,"column":0},"generated":{"line":1,"column":6889}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":280,"column":0},"generated":{"line":1,"column":6891}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":281,"column":0},"generated":{"line":1,"column":6898}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":281,"column":0},"generated":{"line":1,"column":6900}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":281,"column":0},"generated":{"line":1,"column":6905}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":281,"column":0},"generated":{"line":1,"column":6916}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":281,"column":0},"generated":{"line":1,"column":6918}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":281,"column":0},"generated":{"line":1,"column":6930}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":281,"column":0},"generated":{"line":1,"column":6932}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":282,"column":0},"generated":{"line":1,"column":6939}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":282,"column":0},"generated":{"line":1,"column":6941}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":282,"column":0},"generated":{"line":1,"column":6946}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":282,"column":0},"generated":{"line":1,"column":6957}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":282,"column":0},"generated":{"line":1,"column":6959}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":282,"column":0},"generated":{"line":1,"column":6976}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":282,"column":0},"generated":{"line":1,"column":6978}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":283,"column":0},"generated":{"line":1,"column":6985}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":283,"column":0},"generated":{"line":1,"column":6987}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":283,"column":0},"generated":{"line":1,"column":6992}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":283,"column":0},"generated":{"line":1,"column":6994}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":285,"column":0},"generated":{"line":1,"column":6999}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":285,"column":0},"generated":{"line":1,"column":7006}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":285,"column":0},"generated":{"line":1,"column":7008}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":285,"column":0},"generated":{"line":1,"column":7013}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":217,"column":0},"generated":{"line":1,"column":7019}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":217,"column":0},"generated":{"line":1,"column":7020}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":225,"column":0},"generated":{"line":1,"column":7240}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":225,"column":0},"generated":{"line":1,"column":7242}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":225,"column":0},"generated":{"line":1,"column":7273}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":225,"column":0},"generated":{"line":1,"column":7274}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":225,"column":0},"generated":{"line":1,"column":7281}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":226,"column":0},"generated":{"line":1,"column":7300}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":226,"column":0},"generated":{"line":1,"column":7302}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":226,"column":0},"generated":{"line":1,"column":7333}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":226,"column":0},"generated":{"line":1,"column":7334}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":226,"column":0},"generated":{"line":1,"column":7341}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":247,"column":0},"generated":{"line":1,"column":8085}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":247,"column":0},"generated":{"line":1,"column":8087}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":247,"column":0},"generated":{"line":1,"column":8146}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":247,"column":0},"generated":{"line":1,"column":8147}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":247,"column":0},"generated":{"line":1,"column":8154}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":249,"column":0},"generated":{"line":1,"column":8177}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":249,"column":0},"generated":{"line":1,"column":8179}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":249,"column":0},"generated":{"line":1,"column":8226}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":249,"column":0},"generated":{"line":1,"column":8227}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":249,"column":0},"generated":{"line":1,"column":8234}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":324,"column":0},"generated":{"line":1,"column":9093}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":324,"column":0},"generated":{"line":1,"column":9102}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":324,"column":0},"generated":{"line":1,"column":9104}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":325,"column":0},"generated":{"line":1,"column":9107}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":325,"column":0},"generated":{"line":1,"column":9111}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":325,"column":0},"generated":{"line":1,"column":9113}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":325,"column":0},"generated":{"line":1,"column":9115}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":326,"column":0},"generated":{"line":1,"column":9118}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":328,"column":0},"generated":{"line":1,"column":9178}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":328,"column":0},"generated":{"line":1,"column":9180}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":328,"column":0},"generated":{"line":1,"column":9234}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":328,"column":0},"generated":{"line":1,"column":9235}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":328,"column":0},"generated":{"line":1,"column":9242}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":330,"column":0},"generated":{"line":1,"column":9265}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":330,"column":0},"generated":{"line":1,"column":9267}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":330,"column":0},"generated":{"line":1,"column":9283}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":330,"column":0},"generated":{"line":1,"column":9284}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":330,"column":0},"generated":{"line":1,"column":9289}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":335,"column":0},"generated":{"line":1,"column":9310}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":335,"column":0},"generated":{"line":1,"column":9319}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":335,"column":0},"generated":{"line":1,"column":9321}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":336,"column":0},"generated":{"line":1,"column":9324}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":336,"column":0},"generated":{"line":1,"column":9328}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":336,"column":0},"generated":{"line":1,"column":9330}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":336,"column":0},"generated":{"line":1,"column":9335}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":336,"column":0},"generated":{"line":1,"column":9339}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":336,"column":0},"generated":{"line":1,"column":9341}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":337,"column":0},"generated":{"line":1,"column":9344}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":341,"column":0},"generated":{"line":1,"column":9396}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":342,"column":0},"generated":{"line":1,"column":9407}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":342,"column":0},"generated":{"line":1,"column":9411}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":342,"column":0},"generated":{"line":1,"column":9413}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":343,"column":0},"generated":{"line":1,"column":9416}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":343,"column":0},"generated":{"line":1,"column":9420}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":343,"column":0},"generated":{"line":1,"column":9424}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":343,"column":0},"generated":{"line":1,"column":9426}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":343,"column":0},"generated":{"line":1,"column":9428}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":343,"column":0},"generated":{"line":1,"column":9430}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":343,"column":0},"generated":{"line":1,"column":9434}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":343,"column":0},"generated":{"line":1,"column":9436}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":344,"column":0},"generated":{"line":1,"column":9437}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":344,"column":0},"generated":{"line":1,"column":9441}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":344,"column":0},"generated":{"line":1,"column":9443}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":344,"column":0},"generated":{"line":1,"column":9447}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":344,"column":0},"generated":{"line":1,"column":9449}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":344,"column":0},"generated":{"line":1,"column":9454}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":345,"column":0},"generated":{"line":1,"column":9464}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":345,"column":0},"generated":{"line":1,"column":9466}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":345,"column":0},"generated":{"line":1,"column":9474}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":345,"column":0},"generated":{"line":1,"column":9490}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":345,"column":0},"generated":{"line":1,"column":9505}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":348,"column":0},"generated":{"line":1,"column":9519}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":348,"column":0},"generated":{"line":1,"column":9526}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":348,"column":0},"generated":{"line":1,"column":9528}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":348,"column":0},"generated":{"line":1,"column":9533}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":339,"column":0},"generated":{"line":1,"column":9539}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":356,"column":0},"generated":{"line":1,"column":9547}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":356,"column":0},"generated":{"line":1,"column":9556}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":356,"column":0},"generated":{"line":1,"column":9558}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":357,"column":0},"generated":{"line":1,"column":9561}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":362,"column":0},"generated":{"line":1,"column":9602}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":363,"column":0},"generated":{"line":1,"column":9613}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":363,"column":0},"generated":{"line":1,"column":9617}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":363,"column":0},"generated":{"line":1,"column":9619}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":364,"column":0},"generated":{"line":1,"column":9622}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":364,"column":0},"generated":{"line":1,"column":9624}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":364,"column":0},"generated":{"line":1,"column":9629}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":364,"column":0},"generated":{"line":1,"column":9633}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":364,"column":0},"generated":{"line":1,"column":9635}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":365,"column":0},"generated":{"line":1,"column":9638}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":365,"column":0},"generated":{"line":1,"column":9642}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":365,"column":0},"generated":{"line":1,"column":9646}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":365,"column":0},"generated":{"line":1,"column":9648}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":365,"column":0},"generated":{"line":1,"column":9650}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":365,"column":0},"generated":{"line":1,"column":9652}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":365,"column":0},"generated":{"line":1,"column":9656}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":366,"column":0},"generated":{"line":1,"column":9658}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":366,"column":0},"generated":{"line":1,"column":9660}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":366,"column":0},"generated":{"line":1,"column":9682}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":366,"column":0},"generated":{"line":1,"column":9704}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":369,"column":0},"generated":{"line":1,"column":9710}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":369,"column":0},"generated":{"line":1,"column":9717}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":369,"column":0},"generated":{"line":1,"column":9719}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":369,"column":0},"generated":{"line":1,"column":9724}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":358,"column":0},"generated":{"line":1,"column":9730}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":377,"column":0},"generated":{"line":1,"column":9754}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":377,"column":0},"generated":{"line":1,"column":9763}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":377,"column":0},"generated":{"line":1,"column":9765}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":378,"column":0},"generated":{"line":1,"column":9768}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":378,"column":0},"generated":{"line":1,"column":9772}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":378,"column":0},"generated":{"line":1,"column":9774}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":378,"column":0},"generated":{"line":1,"column":9776}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":379,"column":0},"generated":{"line":1,"column":9779}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":379,"column":0},"generated":{"line":1,"column":9781}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":379,"column":0},"generated":{"line":1,"column":9786}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":379,"column":0},"generated":{"line":1,"column":9790}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":379,"column":0},"generated":{"line":1,"column":9792}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":403,"column":0},"generated":{"line":1,"column":9795}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":405,"column":0},"generated":{"line":1,"column":10066}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":405,"column":0},"generated":{"line":1,"column":10075}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":410,"column":0},"generated":{"line":1,"column":10078}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":410,"column":0},"generated":{"line":1,"column":10082}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":410,"column":0},"generated":{"line":1,"column":10084}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":411,"column":0},"generated":{"line":1,"column":10087}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":411,"column":0},"generated":{"line":1,"column":10091}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":411,"column":0},"generated":{"line":1,"column":10095}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":411,"column":0},"generated":{"line":1,"column":10097}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":411,"column":0},"generated":{"line":1,"column":10099}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":411,"column":0},"generated":{"line":1,"column":10101}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":411,"column":0},"generated":{"line":1,"column":10105}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":412,"column":0},"generated":{"line":1,"column":10107}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":412,"column":0},"generated":{"line":1,"column":10109}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":412,"column":0},"generated":{"line":1,"column":10117}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":412,"column":0},"generated":{"line":1,"column":10125}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":414,"column":0},"generated":{"line":1,"column":10138}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":414,"column":0},"generated":{"line":1,"column":10145}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":414,"column":0},"generated":{"line":1,"column":10147}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":414,"column":0},"generated":{"line":1,"column":10152}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":390,"column":0},"generated":{"line":1,"column":10158}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":390,"column":0},"generated":{"line":1,"column":10159}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":396,"column":0},"generated":{"line":1,"column":10264}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":396,"column":0},"generated":{"line":1,"column":10266}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":396,"column":0},"generated":{"line":1,"column":10289}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":396,"column":0},"generated":{"line":1,"column":10290}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":396,"column":0},"generated":{"line":1,"column":10297}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":399,"column":0},"generated":{"line":1,"column":10340}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":399,"column":0},"generated":{"line":1,"column":10342}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":399,"column":0},"generated":{"line":1,"column":10364}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":399,"column":0},"generated":{"line":1,"column":10365}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":399,"column":0},"generated":{"line":1,"column":10372}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":400,"column":0},"generated":{"line":1,"column":10382}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":400,"column":0},"generated":{"line":1,"column":10384}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":400,"column":0},"generated":{"line":1,"column":10406}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":400,"column":0},"generated":{"line":1,"column":10407}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":400,"column":0},"generated":{"line":1,"column":10414}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":418,"column":0},"generated":{"line":1,"column":10425}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":418,"column":0},"generated":{"line":1,"column":10434}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":419,"column":0},"generated":{"line":1,"column":10438}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":419,"column":0},"generated":{"line":1,"column":10444}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":4,"column":0},"generated":{"line":1,"column":11572}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":4,"column":0},"generated":{"line":1,"column":11579}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":4,"column":0},"generated":{"line":1,"column":11587}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":5,"column":0},"generated":{"line":1,"column":11589}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":5,"column":0},"generated":{"line":1,"column":11596}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":5,"column":0},"generated":{"line":1,"column":11604}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":5,"column":0},"generated":{"line":1,"column":11633}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":9,"column":0},"generated":{"line":1,"column":11635}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":9,"column":0},"generated":{"line":1,"column":11642}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":9,"column":0},"generated":{"line":1,"column":11650}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":9,"column":0},"generated":{"line":1,"column":11669}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":11,"column":0},"generated":{"line":1,"column":11671}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":11,"column":0},"generated":{"line":1,"column":11678}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":11,"column":0},"generated":{"line":1,"column":11686}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":11,"column":0},"generated":{"line":1,"column":11702}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":13,"column":0},"generated":{"line":1,"column":11704}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":13,"column":0},"generated":{"line":1,"column":11711}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":13,"column":0},"generated":{"line":1,"column":11719}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":13,"column":0},"generated":{"line":1,"column":11734}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":15,"column":0},"generated":{"line":1,"column":11736}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":15,"column":0},"generated":{"line":1,"column":11743}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":15,"column":0},"generated":{"line":1,"column":11751}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":15,"column":0},"generated":{"line":1,"column":11768}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":17,"column":0},"generated":{"line":1,"column":11770}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":17,"column":0},"generated":{"line":1,"column":11777}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":17,"column":0},"generated":{"line":1,"column":11785}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js","original":{"line":17,"column":0},"generated":{"line":1,"column":11802}}],"sources":{"../node_modules/ngraph.forcelayout/lib/codeGenerators/generateQuadTree.js":"const createPatternBuilder = require('./createPatternBuilder');\nconst getVariableName = require('./getVariableName');\n\nmodule.exports = generateQuadTreeFunction;\nmodule.exports.generateQuadTreeFunctionBody = generateQuadTreeFunctionBody;\n\n// These exports are for InlineTransform tool.\n// InlineTransform: getInsertStackCode\nmodule.exports.getInsertStackCode = getInsertStackCode;\n// InlineTransform: getQuadNodeCode\nmodule.exports.getQuadNodeCode = getQuadNodeCode;\n// InlineTransform: isSamePosition\nmodule.exports.isSamePosition = isSamePosition;\n// InlineTransform: getChildBodyCode\nmodule.exports.getChildBodyCode = getChildBodyCode;\n// InlineTransform: setChildBodyCode\nmodule.exports.setChildBodyCode = setChildBodyCode;\n\nfunction generateQuadTreeFunction(dimension) {\n  let code = generateQuadTreeFunctionBody(dimension);\n  return (new Function(code))();\n}\n\nfunction generateQuadTreeFunctionBody(dimension) {\n  let pattern = createPatternBuilder(dimension);\n  let quadCount = Math.pow(2, dimension);\n\n  let code = `\n${getInsertStackCode()}\n${getQuadNodeCode(dimension)}\n${isSamePosition(dimension)}\n${getChildBodyCode(dimension)}\n${setChildBodyCode(dimension)}\n\nfunction createQuadTree(options, random) {\n  options = options || {};\n  options.gravity = typeof options.gravity === 'number' ? options.gravity : -1;\n  options.theta = typeof options.theta === 'number' ? options.theta : 0.8;\n\n  var gravity = options.gravity;\n  var updateQueue = [];\n  var insertStack = new InsertStack();\n  var theta = options.theta;\n\n  var nodesCache = [];\n  var currentInCache = 0;\n  var root = newNode();\n\n  return {\n    insertBodies: insertBodies,\n\n    /**\n     * Gets root node if it is present\n     */\n    getRoot: function() {\n      return root;\n    },\n\n    updateBodyForce: update,\n\n    options: function(newOptions) {\n      if (newOptions) {\n        if (typeof newOptions.gravity === 'number') {\n          gravity = newOptions.gravity;\n        }\n        if (typeof newOptions.theta === 'number') {\n          theta = newOptions.theta;\n        }\n\n        return this;\n      }\n\n      return {\n        gravity: gravity,\n        theta: theta\n      };\n    }\n  };\n\n  function newNode() {\n    // To avoid pressure on GC we reuse nodes.\n    var node = nodesCache[currentInCache];\n    if (node) {\n${assignQuads('      node.')}\n      node.body = null;\n      node.mass = ${pattern('node.mass_{var} = ', {join: ''})}0;\n      ${pattern('node.min_{var} = node.max_{var} = ', {join: ''})}0;\n    } else {\n      node = new QuadNode();\n      nodesCache[currentInCache] = node;\n    }\n\n    ++currentInCache;\n    return node;\n  }\n\n  function update(sourceBody) {\n    var queue = updateQueue;\n    var v;\n    ${pattern('var d{var};', {indent: 4})}\n    var r; \n    ${pattern('var f{var} = 0;', {indent: 4})}\n    var queueLength = 1;\n    var shiftIdx = 0;\n    var pushIdx = 1;\n\n    queue[0] = root;\n\n    while (queueLength) {\n      var node = queue[shiftIdx];\n      var body = node.body;\n\n      queueLength -= 1;\n      shiftIdx += 1;\n      var differentBody = (body !== sourceBody);\n      if (body && differentBody) {\n        // If the current node is a leaf node (and it is not source body),\n        // calculate the force exerted by the current node on body, and add this\n        // amount to body's net force.\n        ${pattern('d{var} = body.pos.{var} - sourceBody.pos.{var};', {indent: 8})}\n        r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n\n        if (r === 0) {\n          // Poor man's protection against zero distance.\n          ${pattern('d{var} = (random.nextDouble() - 0.5) / 50;', {indent: 10})}\n          r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n        }\n\n        // This is standard gravitation force calculation but we divide\n        // by r^3 to save two operations when normalizing force vector.\n        v = gravity * body.mass * sourceBody.mass / (r * r * r);\n        ${pattern('f{var} += v * d{var};', {indent: 8})}\n      } else if (differentBody) {\n        // Otherwise, calculate the ratio s / r,  where s is the width of the region\n        // represented by the internal node, and r is the distance between the body\n        // and the node's center-of-mass\n        ${pattern('d{var} = node.mass_{var} / node.mass - sourceBody.pos.{var};', {indent: 8})}\n        r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n\n        if (r === 0) {\n          // Sorry about code duplication. I don't want to create many functions\n          // right away. Just want to see performance first.\n          ${pattern('d{var} = (random.nextDouble() - 0.5) / 50;', {indent: 10})}\n          r = Math.sqrt(${pattern('d{var} * d{var}', {join: ' + '})});\n        }\n        // If s / r < Î¸, treat this internal node as a single body, and calculate the\n        // force it exerts on sourceBody, and add this amount to sourceBody's net force.\n        if ((node.max_${getVariableName(0)} - node.min_${getVariableName(0)}) / r < theta) {\n          // in the if statement above we consider node's width only\n          // because the region was made into square during tree creation.\n          // Thus there is no difference between using width or height.\n          v = gravity * node.mass * sourceBody.mass / (r * r * r);\n          ${pattern('f{var} += v * d{var};', {indent: 10})}\n        } else {\n          // Otherwise, run the procedure recursively on each of the current node's children.\n\n          // I intentionally unfolded this loop, to save several CPU cycles.\n${runRecursiveOnChildren()}\n        }\n      }\n    }\n\n    ${pattern('sourceBody.force.{var} += f{var};', {indent: 4})}\n  }\n\n  function insertBodies(bodies) {\n    ${pattern('var {var}min = Number.MAX_VALUE;', {indent: 4})}\n    ${pattern('var {var}max = Number.MIN_VALUE;', {indent: 4})}\n    var i = bodies.length;\n\n    // To reduce quad tree depth we are looking for exact bounding box of all particles.\n    while (i--) {\n      var pos = bodies[i].pos;\n      ${pattern('if (pos.{var} < {var}min) {var}min = pos.{var};', {indent: 6})}\n      ${pattern('if (pos.{var} > {var}max) {var}max = pos.{var};', {indent: 6})}\n    }\n\n    // Makes the bounds square.\n    var maxSideLength = -Infinity;\n    ${pattern('if ({var}max - {var}min > maxSideLength) maxSideLength = {var}max - {var}min ;', {indent: 4})}\n\n    currentInCache = 0;\n    root = newNode();\n    ${pattern('root.min_{var} = {var}min;', {indent: 4})}\n    ${pattern('root.max_{var} = {var}min + maxSideLength;', {indent: 4})}\n\n    i = bodies.length - 1;\n    if (i >= 0) {\n      root.body = bodies[i];\n    }\n    while (i--) {\n      insert(bodies[i], root);\n    }\n  }\n\n  function insert(newBody) {\n    insertStack.reset();\n    insertStack.push(root, newBody);\n\n    while (!insertStack.isEmpty()) {\n      var stackItem = insertStack.pop();\n      var node = stackItem.node;\n      var body = stackItem.body;\n\n      if (!node.body) {\n        // This is internal node. Update the total mass of the node and center-of-mass.\n        ${pattern('var {var} = body.pos.{var};', {indent: 8})}\n        node.mass += body.mass;\n        ${pattern('node.mass_{var} += body.mass * {var};', {indent: 8})}\n\n        // Recursively insert the body in the appropriate quadrant.\n        // But first find the appropriate quadrant.\n        var quadIdx = 0; // Assume we are in the 0's quad.\n        ${pattern('var min_{var} = node.min_{var};', {indent: 8})}\n        ${pattern('var max_{var} = (min_{var} + node.max_{var}) / 2;', {indent: 8})}\n\n${assignInsertionQuadIndex(8)}\n\n        var child = getChild(node, quadIdx);\n\n        if (!child) {\n          // The node is internal but this quadrant is not taken. Add\n          // subnode to it.\n          child = newNode();\n          ${pattern('child.min_{var} = min_{var};', {indent: 10})}\n          ${pattern('child.max_{var} = max_{var};', {indent: 10})}\n          child.body = body;\n\n          setChild(node, quadIdx, child);\n        } else {\n          // continue searching in this quadrant.\n          insertStack.push(child, body);\n        }\n      } else {\n        // We are trying to add to the leaf node.\n        // We have to convert current leaf into internal node\n        // and continue adding two nodes.\n        var oldBody = node.body;\n        node.body = null; // internal nodes do not cary bodies\n\n        if (isSamePosition(oldBody.pos, body.pos)) {\n          // Prevent infinite subdivision by bumping one node\n          // anywhere in this quadrant\n          var retriesCount = 3;\n          do {\n            var offset = random.nextDouble();\n            ${pattern('var d{var} = (node.max_{var} - node.min_{var}) * offset;', {indent: 12})}\n\n            ${pattern('oldBody.pos.{var} = node.min_{var} + d{var};', {indent: 12})}\n            retriesCount -= 1;\n            // Make sure we don't bump it out of the box. If we do, next iteration should fix it\n          } while (retriesCount > 0 && isSamePosition(oldBody.pos, body.pos));\n\n          if (retriesCount === 0 && isSamePosition(oldBody.pos, body.pos)) {\n            // This is very bad, we ran out of precision.\n            // if we do not return from the method we'll get into\n            // infinite loop here. So we sacrifice correctness of layout, and keep the app running\n            // Next layout iteration should get larger bounding box in the first step and fix this\n            return;\n          }\n        }\n        // Next iteration should subdivide node further.\n        insertStack.push(node, oldBody);\n        insertStack.push(node, body);\n      }\n    }\n  }\n}\nreturn createQuadTree;\n\n`;\n  return code;\n\n\n  function assignInsertionQuadIndex(indentCount) {\n    let insertionCode = [];\n    let indent = Array(indentCount + 1).join(' ');\n    for (let i = 0; i < dimension; ++i) {\n      insertionCode.push(indent + `if (${getVariableName(i)} > max_${getVariableName(i)}) {`);\n      insertionCode.push(indent + `  quadIdx = quadIdx + ${Math.pow(2, i)};`);\n      insertionCode.push(indent + `  min_${getVariableName(i)} = max_${getVariableName(i)};`);\n      insertionCode.push(indent + `  max_${getVariableName(i)} = node.max_${getVariableName(i)};`);\n      insertionCode.push(indent + `}`);\n    }\n    return insertionCode.join('\\n');\n    // if (x > max_x) { // somewhere in the eastern part.\n    //   quadIdx = quadIdx + 1;\n    //   left = right;\n    //   right = node.right;\n    // }\n  }\n\n  function runRecursiveOnChildren() {\n    let indent = Array(11).join(' ');\n    let recursiveCode = [];\n    for (let i = 0; i < quadCount; ++i) {\n      recursiveCode.push(indent + `if (node.quad${i}) {`);\n      recursiveCode.push(indent + `  queue[pushIdx] = node.quad${i};`);\n      recursiveCode.push(indent + `  queueLength += 1;`);\n      recursiveCode.push(indent + `  pushIdx += 1;`);\n      recursiveCode.push(indent + `}`);\n    }\n    return recursiveCode.join('\\n');\n    // if (node.quad0) {\n    //   queue[pushIdx] = node.quad0;\n    //   queueLength += 1;\n    //   pushIdx += 1;\n    // }\n  }\n\n  function assignQuads(indent) {\n    // this.quad0 = null;\n    // this.quad1 = null;\n    // this.quad2 = null;\n    // this.quad3 = null;\n    let quads = [];\n    for (let i = 0; i < quadCount; ++i) {\n      quads.push(`${indent}quad${i} = null;`);\n    }\n    return quads.join('\\n');\n  }\n}\n\nfunction isSamePosition(dimension) {\n  let pattern = createPatternBuilder(dimension);\n  return `\n  function isSamePosition(point1, point2) {\n    ${pattern('var d{var} = Math.abs(point1.{var} - point2.{var});', {indent: 2})}\n  \n    return ${pattern('d{var} < 1e-8', {join: ' && '})};\n  }  \n`;\n}\n\nfunction setChildBodyCode(dimension) {\n  var quadCount = Math.pow(2, dimension);\n  return `\nfunction setChild(node, idx, child) {\n  ${setChildBody()}\n}`;\n  function setChildBody() {\n    let childBody = [];\n    for (let i = 0; i < quadCount; ++i) {\n      let prefix = (i === 0) ? '  ' : '  else ';\n      childBody.push(`${prefix}if (idx === ${i}) node.quad${i} = child;`);\n    }\n\n    return childBody.join('\\n');\n    // if (idx === 0) node.quad0 = child;\n    // else if (idx === 1) node.quad1 = child;\n    // else if (idx === 2) node.quad2 = child;\n    // else if (idx === 3) node.quad3 = child;\n  }\n}\n\nfunction getChildBodyCode(dimension) {\n  return `function getChild(node, idx) {\n${getChildBody()}\n  return null;\n}`;\n\n  function getChildBody() {\n    let childBody = [];\n    let quadCount = Math.pow(2, dimension);\n    for (let i = 0; i < quadCount; ++i) {\n      childBody.push(`  if (idx === ${i}) return node.quad${i};`);\n    }\n\n    return childBody.join('\\n');\n    // if (idx === 0) return node.quad0;\n    // if (idx === 1) return node.quad1;\n    // if (idx === 2) return node.quad2;\n    // if (idx === 3) return node.quad3;\n  }\n}\n\nfunction getQuadNodeCode(dimension) {\n  let pattern = createPatternBuilder(dimension);\n  let quadCount = Math.pow(2, dimension);\n  var quadNodeCode = `\nfunction QuadNode() {\n  // body stored inside this node. In quad tree only leaf nodes (by construction)\n  // contain bodies:\n  this.body = null;\n\n  // Child nodes are stored in quads. Each quad is presented by number:\n  // 0 | 1\n  // -----\n  // 2 | 3\n${assignQuads('  this.')}\n\n  // Total mass of current node\n  this.mass = 0;\n\n  // Center of mass coordinates\n  ${pattern('this.mass_{var} = 0;', {indent: 2})}\n\n  // bounding box coordinates\n  ${pattern('this.min_{var} = 0;', {indent: 2})}\n  ${pattern('this.max_{var} = 0;', {indent: 2})}\n}\n`;\n  return quadNodeCode;\n\n  function assignQuads(indent) {\n    // this.quad0 = null;\n    // this.quad1 = null;\n    // this.quad2 = null;\n    // this.quad3 = null;\n    let quads = [];\n    for (let i = 0; i < quadCount; ++i) {\n      quads.push(`${indent}quad${i} = null;`);\n    }\n    return quads.join('\\n');\n  }\n}\n\nfunction getInsertStackCode() {\n  return `\n/**\n * Our implementation of QuadTree is non-recursive to avoid GC hit\n * This data structure represent stack of elements\n * which we are trying to insert into quad tree.\n */\nfunction InsertStack () {\n    this.stack = [];\n    this.popIdx = 0;\n}\n\nInsertStack.prototype = {\n    isEmpty: function() {\n        return this.popIdx === 0;\n    },\n    push: function (node, body) {\n        var item = this.stack[this.popIdx];\n        if (!item) {\n            // we are trying to avoid memory pressure: create new element\n            // only when absolutely necessary\n            this.stack[this.popIdx] = new InsertStackElement(node, body);\n        } else {\n            item.node = node;\n            item.body = body;\n        }\n        ++this.popIdx;\n    },\n    pop: function () {\n        if (this.popIdx > 0) {\n            return this.stack[--this.popIdx];\n        }\n    },\n    reset: function () {\n        this.popIdx = 0;\n    }\n};\n\nfunction InsertStackElement(node, body) {\n    this.node = node; // QuadTree node\n    this.body = body; // physical body which needs to be inserted to node\n}\n`;\n}"},"lineCount":null}},"error":null,"hash":"f94d856fd98f6e2749030b6e2557d9fe","cacheData":{"env":{}}}