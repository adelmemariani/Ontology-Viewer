{"id":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","dependencies":[{"name":"/Users/memarian/Documents/ov/oeo-viewer/client/package.json","includedInParent":true,"mtime":1652294789744},{"name":"/Users/memarian/Documents/ov/oeo-viewer/client/.babelrc","includedInParent":true,"mtime":1652294789738},{"name":"/Users/memarian/Documents/ov/oeo-viewer/client/node_modules/ngraph.forcelayout/package.json","includedInParent":true,"mtime":1652294858703},{"name":"./getVariableName","loc":{"line":1,"column":32},"parent":"/Users/memarian/Documents/ov/oeo-viewer/client/node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","resolved":"/Users/memarian/Documents/ov/oeo-viewer/client/node_modules/ngraph.forcelayout/lib/codeGenerators/getVariableName.js"}],"generated":{"js":"const getVariableName = require('./getVariableName');\n\nmodule.exports = function createPatternBuilder(dimension) {\n\n  return pattern;\n  \n  function pattern(template, config) {\n    let indent = (config && config.indent) || 0;\n    let join = (config && config.join !== undefined) ? config.join : '\\n';\n    let indentString = Array(indent + 1).join(' ');\n    let buffer = [];\n    for (let i = 0; i < dimension; ++i) {\n      let variableName = getVariableName(i);\n      let prefix = (i === 0) ? '' : indentString;\n      buffer.push(prefix + template.replace(/{var}/g, variableName));\n    }\n    return buffer.join(join);\n  }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}}],"sources":{"../node_modules/ngraph.forcelayout/lib/codeGenerators/createPatternBuilder.js":"const getVariableName = require('./getVariableName');\n\nmodule.exports = function createPatternBuilder(dimension) {\n\n  return pattern;\n  \n  function pattern(template, config) {\n    let indent = (config && config.indent) || 0;\n    let join = (config && config.join !== undefined) ? config.join : '\\n';\n    let indentString = Array(indent + 1).join(' ');\n    let buffer = [];\n    for (let i = 0; i < dimension; ++i) {\n      let variableName = getVariableName(i);\n      let prefix = (i === 0) ? '' : indentString;\n      buffer.push(prefix + template.replace(/{var}/g, variableName));\n    }\n    return buffer.join(join);\n  }\n};\n"},"lineCount":20}},"error":null,"hash":"279eb1edce38a83513cd01887cb59a32","cacheData":{"env":{}}}